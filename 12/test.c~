/*******************************************
*
* Author: HzChen - hzchen_cs@gwmail.gwu.edu
*
*
* Last modified:	03-01-2014 15:34
*
* Filename:		test.c
*
* Description: 
*	
*
*	The sequence of triangle numbers is generated by adding the natural numbers. 
*	So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
*
*	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
*
*	Let us list the factors of the first seven triangle numbers:
*
*	     1: 1
*	     3: 1,3
*		 6: 1,2,3,6
*	     10: 1,2,5,10
*	     15: 1,3,5,15
*	     21: 1,3,7,21
*	     28: 1,2,4,7,14,28
*
*	We can see that 28 is the first triangle number to have over five divisors.
*
*	What is the value of the first triangle number to have over five hundred divisors?
*
*
*
******************************************/
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#define unlikely(x)     __builtin_expect(!!(x), 0)


int num_of_factor(int num)
{
	int end = sqrt(num);
	int i=0, cnt=2;
	for(i=2; i<=end; i++)
		if(!(num%i))
			cnt += 2;

	if(end * end == num)
		cnt--;
	return cnt;
}

int main(int argc, char** argv)
{
	int result = 1;
	int curr_factor=2;
	//int i=0;
	while(1)
	{
		int num = num_of_factor(result);
		//printf("%d: %d\n", result, num);

		if(unlikely(num >= 500))
		{
			printf("the number is %d\n", result);
			break;
		}
		result+=curr_factor++;
	}

	return EXIT_SUCCESS;
}

